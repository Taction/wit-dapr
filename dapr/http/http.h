// Generated by `wit-bindgen` 0.9.0. DO NOT EDIT!
#ifndef __BINDINGS_HTTP_H
#define __BINDINGS_HTTP_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>
#include <string.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct {
  char*ptr;
  size_t len;
} http_string_t;

typedef uint16_t dapr_http_http_types_http_status_t;

typedef struct {
  uint8_t *ptr;
  size_t len;
} dapr_http_http_types_body_t;

typedef struct {
  http_string_t f0;
  http_string_t f1;
} http_tuple2_string_string_t;

typedef struct {
  http_tuple2_string_string_t *ptr;
  size_t len;
} dapr_http_http_types_headers_t;

typedef struct {
  http_tuple2_string_string_t *ptr;
  size_t len;
} dapr_http_http_types_params_t;

typedef http_string_t dapr_http_http_types_uri_t;

typedef uint8_t dapr_http_http_types_method_t;

#define DAPR_HTTP_HTTP_TYPES_METHOD_GET 0
#define DAPR_HTTP_HTTP_TYPES_METHOD_POST 1
#define DAPR_HTTP_HTTP_TYPES_METHOD_PUT 2
#define DAPR_HTTP_HTTP_TYPES_METHOD_DELETE 3
#define DAPR_HTTP_HTTP_TYPES_METHOD_PATCH 4
#define DAPR_HTTP_HTTP_TYPES_METHOD_HEAD 5
#define DAPR_HTTP_HTTP_TYPES_METHOD_OPTIONS 6

typedef struct {
  bool is_some;
  dapr_http_http_types_body_t val;
} http_option_dapr_http_http_types_body_t;

typedef struct {
  dapr_http_http_types_method_t method;
  dapr_http_http_types_uri_t uri;
  dapr_http_http_types_headers_t headers;
  dapr_http_http_types_params_t params;
  http_option_dapr_http_http_types_body_t body;
} dapr_http_http_types_request_t;

typedef struct {
  bool is_some;
  dapr_http_http_types_headers_t val;
} http_option_dapr_http_http_types_headers_t;

typedef struct {
  dapr_http_http_types_http_status_t status;
  http_option_dapr_http_http_types_headers_t headers;
  http_option_dapr_http_http_types_body_t body;
} dapr_http_http_types_response_t;

typedef uint8_t dapr_http_http_types_http_error_t;

#define DAPR_HTTP_HTTP_TYPES_HTTP_ERROR_SUCCESS 0
#define DAPR_HTTP_HTTP_TYPES_HTTP_ERROR_DESTINATION_NOT_ALLOWED 1
#define DAPR_HTTP_HTTP_TYPES_HTTP_ERROR_INVALID_URL 2
#define DAPR_HTTP_HTTP_TYPES_HTTP_ERROR_REQUEST_ERROR 3
#define DAPR_HTTP_HTTP_TYPES_HTTP_ERROR_RUNTIME_ERROR 4
#define DAPR_HTTP_HTTP_TYPES_HTTP_ERROR_TOO_MANY_REQUESTS 5

typedef dapr_http_http_types_request_t dapr_http_http_handler_request_t;

typedef dapr_http_http_types_response_t dapr_http_http_handler_response_t;

// Exported Functions from `dapr:http/http-handler`
void exports_dapr_http_http_handler_handle_http_request(dapr_http_http_handler_request_t *req, dapr_http_http_handler_response_t *ret);

// Helper Functions

void dapr_http_http_types_body_free(dapr_http_http_types_body_t *ptr);
void http_tuple2_string_string_free(http_tuple2_string_string_t *ptr);
void dapr_http_http_types_headers_free(dapr_http_http_types_headers_t *ptr);
void dapr_http_http_types_params_free(dapr_http_http_types_params_t *ptr);
void dapr_http_http_types_uri_free(dapr_http_http_types_uri_t *ptr);
void http_option_dapr_http_http_types_body_free(http_option_dapr_http_http_types_body_t *ptr);
void dapr_http_http_types_request_free(dapr_http_http_types_request_t *ptr);
void http_option_dapr_http_http_types_headers_free(http_option_dapr_http_http_types_headers_t *ptr);
void dapr_http_http_types_response_free(dapr_http_http_types_response_t *ptr);
void dapr_http_http_handler_request_free(dapr_http_http_handler_request_t *ptr);
void dapr_http_http_handler_response_free(dapr_http_http_handler_response_t *ptr);
void http_string_set(http_string_t *ret, const char*s);
void http_string_dup(http_string_t *ret, const char*s);
void http_string_free(http_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
