// Generated by `wit-bindgen` 0.9.0. DO NOT EDIT!
#ifndef __BINDINGS_STATE_H
#define __BINDINGS_STATE_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>
#include <string.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct {
  char*ptr;
  size_t len;
} state_string_t;

typedef state_string_t dapr_state_state_types_error_t;

typedef state_string_t dapr_state_state_types_key_t;

typedef struct {
  state_string_t f0;
  state_string_t f1;
} state_tuple2_string_string_t;

typedef struct {
  state_tuple2_string_string_t *ptr;
  size_t len;
} dapr_state_state_types_metadata_t;

typedef state_string_t dapr_state_state_types_consistency_t;

typedef struct {
  dapr_state_state_types_consistency_t consistency;
} dapr_state_state_types_get_state_options_t;

typedef struct {
  bool is_some;
  dapr_state_state_types_metadata_t val;
} state_option_dapr_state_state_types_metadata_t;

typedef struct {
  bool is_some;
  dapr_state_state_types_get_state_options_t val;
} state_option_dapr_state_state_types_get_state_options_t;

typedef struct {
  dapr_state_state_types_key_t key;
  state_option_dapr_state_state_types_metadata_t metadata;
  state_option_dapr_state_state_types_get_state_options_t options;
} dapr_state_state_types_get_request_t;

typedef struct {
  uint8_t *ptr;
  size_t len;
} dapr_state_state_types_data_t;

typedef struct {
  bool is_some;
  state_string_t val;
} dapr_state_state_types_etag_t;

typedef struct {
  bool is_some;
  state_string_t val;
} dapr_state_state_types_content_type_t;

typedef struct {
  dapr_state_state_types_data_t data;
  dapr_state_state_types_etag_t etag;
  state_option_dapr_state_state_types_metadata_t metadata;
  dapr_state_state_types_content_type_t content_type;
} dapr_state_state_types_get_response_t;

typedef struct {
  state_string_t concurrency;
  dapr_state_state_types_consistency_t consistency;
} dapr_state_state_types_set_state_options_t;

typedef struct {
  dapr_state_state_types_key_t key;
  dapr_state_state_types_data_t value;
  dapr_state_state_types_etag_t etag;
  state_option_dapr_state_state_types_metadata_t metadata;
  dapr_state_state_types_set_state_options_t options;
  dapr_state_state_types_content_type_t content_type;
} dapr_state_state_types_set_request_t;

typedef struct {
  dapr_state_state_types_key_t key;
  dapr_state_state_types_etag_t etag;
  state_option_dapr_state_state_types_metadata_t metadata;
  dapr_state_state_types_set_state_options_t options;
} dapr_state_state_types_delete_request_t;

typedef dapr_state_state_types_get_request_t dapr_state_state_interface_get_request_t;

typedef dapr_state_state_types_get_response_t dapr_state_state_interface_get_response_t;

typedef dapr_state_state_types_set_request_t dapr_state_state_interface_set_request_t;

typedef dapr_state_state_types_delete_request_t dapr_state_state_interface_delete_request_t;

typedef dapr_state_state_types_error_t dapr_state_state_interface_error_t;

typedef struct {
  bool is_err;
  union {
    dapr_state_state_interface_get_response_t ok;
    dapr_state_state_interface_error_t err;
  } val;
} state_result_dapr_state_state_interface_get_response_dapr_state_state_interface_error_t;

typedef struct {
  bool is_err;
  union {
    uint32_t ok;
    dapr_state_state_interface_error_t err;
  } val;
} state_result_u32_dapr_state_state_interface_error_t;

// Exported Functions from `dapr:state/state-interface`
void exports_dapr_state_state_interface_get(dapr_state_state_interface_get_request_t *req, state_result_dapr_state_state_interface_get_response_dapr_state_state_interface_error_t *ret);
void exports_dapr_state_state_interface_set(dapr_state_state_interface_set_request_t *req, state_result_u32_dapr_state_state_interface_error_t *ret);
void exports_dapr_state_state_interface_delete(dapr_state_state_interface_delete_request_t *req, state_result_u32_dapr_state_state_interface_error_t *ret);

// Helper Functions

void dapr_state_state_types_error_free(dapr_state_state_types_error_t *ptr);
void dapr_state_state_types_key_free(dapr_state_state_types_key_t *ptr);
void state_tuple2_string_string_free(state_tuple2_string_string_t *ptr);
void dapr_state_state_types_metadata_free(dapr_state_state_types_metadata_t *ptr);
void dapr_state_state_types_consistency_free(dapr_state_state_types_consistency_t *ptr);
void dapr_state_state_types_get_state_options_free(dapr_state_state_types_get_state_options_t *ptr);
void state_option_dapr_state_state_types_metadata_free(state_option_dapr_state_state_types_metadata_t *ptr);
void state_option_dapr_state_state_types_get_state_options_free(state_option_dapr_state_state_types_get_state_options_t *ptr);
void dapr_state_state_types_get_request_free(dapr_state_state_types_get_request_t *ptr);
void dapr_state_state_types_data_free(dapr_state_state_types_data_t *ptr);
void dapr_state_state_types_etag_free(dapr_state_state_types_etag_t *ptr);
void dapr_state_state_types_content_type_free(dapr_state_state_types_content_type_t *ptr);
void dapr_state_state_types_get_response_free(dapr_state_state_types_get_response_t *ptr);
void dapr_state_state_types_set_state_options_free(dapr_state_state_types_set_state_options_t *ptr);
void dapr_state_state_types_set_request_free(dapr_state_state_types_set_request_t *ptr);
void dapr_state_state_types_delete_request_free(dapr_state_state_types_delete_request_t *ptr);
void dapr_state_state_interface_get_request_free(dapr_state_state_interface_get_request_t *ptr);
void dapr_state_state_interface_get_response_free(dapr_state_state_interface_get_response_t *ptr);
void dapr_state_state_interface_set_request_free(dapr_state_state_interface_set_request_t *ptr);
void dapr_state_state_interface_delete_request_free(dapr_state_state_interface_delete_request_t *ptr);
void dapr_state_state_interface_error_free(dapr_state_state_interface_error_t *ptr);
void state_result_dapr_state_state_interface_get_response_dapr_state_state_interface_error_free(state_result_dapr_state_state_interface_get_response_dapr_state_state_interface_error_t *ptr);
void state_result_u32_dapr_state_state_interface_error_free(state_result_u32_dapr_state_state_interface_error_t *ptr);
void state_string_set(state_string_t *ret, const char*s);
void state_string_dup(state_string_t *ret, const char*s);
void state_string_free(state_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
